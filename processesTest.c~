#include <sys/mman.h>
#include <stdio.h> 
#include <stdlib.h> 
#include <string.h> 
#include <fcntl.h> 
#include <sys/shm.h> 
#include <sys/stat.h> 
#include <sys/types.h>

 
int main() 
{ 
    /* the size (in bytes) of shared memory object */
    const int SIZE = 750000; 
  
    /* name of the shared memory object */
    const char* name = "OS"; 
  
    /* strings written to shared memory */
    const char* message_0 = "Hello"; 
    const char* message_1 = "World!"; 
    const char* message_2 = "Operating";     
    const char* message_3 = "Systems"; 
    const char* message_4 = "Class"; 
    const char* message_5 = "Project"; 
  
    /* shared memory file descriptor */
    int shm_fd; 
  
    /* pointer to shared memory obect */
    void* ptr; 
  
    /* create the shared memory object */
    shm_fd = shm_open(name, O_CREAT | O_RDWR, 0666); 
  
    /* configure the size of the shared memory object */
    ftruncate(shm_fd, SIZE); 
  
    /* memory map the shared memory object */
    ptr = mmap(0, SIZE, PROT_WRITE, MAP_SHARED, shm_fd, 0); 
  
    /* write to the shared memory object */
    sprintf(ptr, "%s ", message_0); 
  
    ptr += strlen(message_0 + " "); 
    sprintf(ptr, "%s ", message_1); 
    ptr += strlen(message_1); 
    
    //code to read from shared memory
  
	//notice that in order to open the shared memory object the parameter is now O_RDONLY in shm_open
    // open the shared memory object 
    
    int shm_fdTest;  
    void *ptr2;    
    shm_fdTest = shm_open(name, O_RDONLY, 0666); 
   
  	//also in order to memory map the shared memory object
    // memory map the shared memory object
    ptr2 = mmap(0, SIZE, PROT_READ, MAP_SHARED, shm_fdTest, 0); 
  
    // read from the shared memory object
    printf("%s", (char*)ptr2); 
    
    const char * readMessage = (char*)ptr2; 
    
    printf(" Message: %s", readMessage);
    printf("\n"); 
    
    
    // remove the shared memory object 
    //shm_unlink(name);
    
  //writing to new shared memory object 
   
   // create the shared memory object 
    
    shm_fd = shm_open(name, O_CREAT | O_RDWR, 0666); 
  
    //configure the size of the shared memory object
    ftruncate(shm_fd, SIZE); 
  
    //memory map the shared memory object
    //ptr = mmap(0, SIZE, PROT_WRITE, MAP_SHARED, shm_fd, 0); 
    
      
    // write to the shared memory object
    sprintf(ptr, "%s ", message_2); 
    ptr += strlen(message_2); 
    
    sprintf(ptr, "%s ", message_3); 
    ptr += strlen(message_3); 
    
    sprintf(ptr, "%s ", message_4); 
    ptr += strlen(message_4); 
    
    sprintf(ptr, "%s ", message_5); 
    ptr += strlen(message_5); 
   
  //reading from new shared memory object 
    shm_fd = shm_open(name, O_RDONLY, 0666); 
   
  	//also in order to memory map the shared memory object
    /* memory map the shared memory object */
    ptr = mmap(0, SIZE, PROT_READ, MAP_SHARED, shm_fd, 0); 
  
    /* read from the shared memory object */
    printf("%s ", (char*)ptr); 
    
    //const char * readMessage = (char*)ptr; 
    readMessage = (char*)ptr; 
    
    printf(" Message: %s ", readMessage);
    //printf("\n"); 
    
    

  
    /* remove the shared memory object */
    shm_unlink(name);
            
                     
    
    //return 0; 
} 